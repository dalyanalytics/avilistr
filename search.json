[{"path":[]},{"path":"https://dalyanalytics.github.io/avilistr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"CC0 1.0 Universal","title":"CC0 1.0 Universal","text":"CREATIVE COMMONS CORPORATION LAW FIRM PROVIDE LEGAL SERVICES. DISTRIBUTION DOCUMENT CREATE ATTORNEY-CLIENT RELATIONSHIP. CREATIVE COMMONS PROVIDES INFORMATION “-” BASIS. CREATIVE COMMONS MAKES WARRANTIES REGARDING USE DOCUMENT INFORMATION WORKS PROVIDED HEREUNDER, DISCLAIMS LIABILITY DAMAGES RESULTING USE DOCUMENT INFORMATION WORKS PROVIDED HEREUNDER.","code":""},{"path":"https://dalyanalytics.github.io/avilistr/LICENSE.html","id":"statement-of-purpose","dir":"","previous_headings":"","what":"Statement of Purpose","title":"CC0 1.0 Universal","text":"laws jurisdictions throughout world automatically confer exclusive Copyright Related Rights (defined ) upon creator subsequent owner(s) (, “owner”) original work authorship /database (, “Work”). Certain owners wish permanently relinquish rights Work purpose contributing commons creative, cultural scientific works (“Commons”) public can reliably without fear later claims infringement build upon, modify, incorporate works, reuse redistribute freely possible form whatsoever purposes, including without limitation commercial purposes. owners may contribute Commons promote ideal free culture production creative, cultural scientific works, gain reputation greater distribution Work part use efforts others. /purposes motivations, without expectation additional consideration compensation, person associating CC0 Work (“Affirmer”), extent owner Copyright Related Rights Work, voluntarily elects apply CC0 Work publicly distribute Work terms, knowledge Copyright Related Rights Work meaning intended legal effect CC0 rights. Copyright Related Rights. Work made available CC0 may protected copyright related neighboring rights (“Copyright Related Rights”). Copyright Related Rights include, limited , following: right reproduce, adapt, distribute, perform, display, communicate, translate Work; moral rights retained original author(s) /performer(s); publicity privacy rights pertaining person’s image likeness depicted Work; rights protecting unfair competition regards Work, subject limitations paragraph 4(), ; rights protecting extraction, dissemination, use reuse data Work; database rights (arising Directive 96/9/EC European Parliament Council 11 March 1996 legal protection databases, national implementation thereof, including amended successor version directive); similar, equivalent corresponding rights throughout world based applicable law treaty, national implementations thereof. Waiver. greatest extent permitted , contravention , applicable law, Affirmer hereby overtly, fully, permanently, irrevocably unconditionally waives, abandons, surrenders Affirmer’s Copyright Related Rights associated claims causes action, whether now known unknown (including existing well future claims causes action), Work () territories worldwide, (ii) maximum duration provided applicable law treaty (including future time extensions), (iii) current future medium number copies, (iv) purpose whatsoever, including without limitation commercial, advertising promotional purposes (“Waiver”). Affirmer makes Waiver benefit member public large detriment Affirmer’s heirs successors, fully intending Waiver shall subject revocation, rescission, cancellation, termination, legal equitable action disrupt quiet enjoyment Work public contemplated Affirmer’s express Statement Purpose. Public License Fallback. part Waiver reason judged legally invalid ineffective applicable law, Waiver shall preserved maximum extent permitted taking account Affirmer’s express Statement Purpose. addition, extent Waiver judged Affirmer hereby grants affected person royalty-free, non transferable, non sublicensable, non exclusive, irrevocable unconditional license exercise Affirmer’s Copyright Related Rights Work () territories worldwide, (ii) maximum duration provided applicable law treaty (including future time extensions), (iii) current future medium number copies, (iv) purpose whatsoever, including without limitation commercial, advertising promotional purposes (“License”). License shall deemed effective date CC0 applied Affirmer Work. part License reason judged legally invalid ineffective applicable law, partial invalidity ineffectiveness shall invalidate remainder License, case Affirmer hereby affirms () exercise remaining Copyright Related Rights Work (ii) assert associated claims causes action respect Work, either case contrary Affirmer’s express Statement Purpose. Limitations Disclaimers. trademark patent rights held Affirmer waived, abandoned, surrendered, licensed otherwise affected document. Affirmer offers Work -makes representations warranties kind concerning Work, express, implied, statutory otherwise, including without limitation warranties title, merchantability, fitness particular purpose, non infringement, absence latent defects, accuracy, present absence errors, whether discoverable, greatest extent permissible applicable law. Affirmer disclaims responsibility clearing rights persons may apply Work use thereof, including without limitation person’s Copyright Related Rights Work. , Affirmer disclaims responsibility obtaining necessary consents, permissions rights required use Work. Affirmer understands acknowledges Creative Commons party document duty obligation respect CC0 use Work.","code":""},{"path":"https://dalyanalytics.github.io/avilistr/articles/getting-started.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Getting Started with avilistr","text":"avilistr package provides access AviList Global Avian Checklist, first unified global bird taxonomy. vignette demonstrates work data common ornithological biodiversity analyses.","code":"library(avilistr) library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union library(ggplot2) library(tidyverse) #> ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ── #> ✔ forcats   1.0.0     ✔ stringr   1.5.1 #> ✔ lubridate 1.9.4     ✔ tibble    3.3.0 #> ✔ purrr     1.0.4     ✔ tidyr     1.3.1 #> ✔ readr     2.1.5 #> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── #> ✖ dplyr::filter() masks stats::filter() #> ✖ dplyr::lag()    masks stats::lag() #> ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors"},{"path":"https://dalyanalytics.github.io/avilistr/articles/getting-started.html","id":"loading-the-data","dir":"Articles","previous_headings":"","what":"Loading the Data","title":"Getting Started with avilistr","text":"package provides three main datasets:","code":"# Load the datasets data(avilist_2025)         # Complete dataset (26 fields) data(avilist_2025_short)   # Essential fields (~12 fields)   data(avilist_metadata)     # Field descriptions  # Check data dimensions cat(\"Full dataset:\", nrow(avilist_2025), \"records,\", ncol(avilist_2025), \"fields\\n\") #> Full dataset: 33684 records, 26 fields cat(\"Short dataset:\", nrow(avilist_2025_short), \"records,\", ncol(avilist_2025_short), \"fields\\n\") #> Short dataset: 33684 records, 14 fields"},{"path":[]},{"path":"https://dalyanalytics.github.io/avilistr/articles/getting-started.html","id":"dataset-overview","dir":"Articles","previous_headings":"Basic Data Exploration","what":"Dataset Overview","title":"Getting Started with avilistr","text":"","code":"# Count records by taxonomic rank avilist_2025_short %>%   count(Taxon_rank, sort = TRUE) #> # A tibble: 5 × 2 #>   Taxon_rank     n #>   <chr>      <int> #> 1 subspecies 19879 #> 2 species    11131 #> 3 genus       2376 #> 4 family       252 #> 5 order         46"},{"path":"https://dalyanalytics.github.io/avilistr/articles/getting-started.html","id":"taxonomic-diversity","dir":"Articles","previous_headings":"Basic Data Exploration","what":"Taxonomic Diversity","title":"Getting Started with avilistr","text":"","code":"# Count species by order (top 10) species_by_order <- avilist_2025_short %>%   filter(Taxon_rank == \"species\") %>%   count(Order, sort = TRUE) %>%   head(10)  print(species_by_order) #> # A tibble: 10 × 2 #>    Order               n #>    <chr>           <int> #>  1 Passeriformes    6705 #>  2 Apodiformes       472 #>  3 Psittaciformes    406 #>  4 Charadriiformes   392 #>  5 Piciformes        385 #>  6 Columbiformes     350 #>  7 Galliformes       307 #>  8 Accipitriformes   252 #>  9 Strigiformes      245 #> 10 Coraciiformes     185 # Visualize most diverse orders ggplot(species_by_order, aes(x = reorder(Order, n), y = n)) +   geom_col(fill = \"steelblue\", alpha = 0.8) +   coord_flip() +   labs(     title = \"Most Species-Rich Bird Orders\",     subtitle = \"Top 10 orders by number of species\",     x = \"Order\",     y = \"Number of Species\",     caption = \"Data: AviList Global Avian Checklist v2025\"   ) +   theme_minimal()"},{"path":"https://dalyanalytics.github.io/avilistr/articles/getting-started.html","id":"family-level-diversity","dir":"Articles","previous_headings":"Basic Data Exploration","what":"Family-Level Diversity","title":"Getting Started with avilistr","text":"","code":"# Most diverse bird families family_richness <- avilist_2025_short %>%   filter(Taxon_rank == \"species\") %>%   count(Family, Family_English_name, sort = TRUE) %>%   head(15)  print(family_richness) #> # A tibble: 15 × 3 #>    Family         Family_English_name                               n #>    <chr>          <chr>                                         <int> #>  1 Tyrannidae     Tyrant Flycatchers and Allies                   441 #>  2 Thraupidae     Tanagers and Allies                             390 #>  3 Trochilidae    Hummingbirds                                    363 #>  4 Muscicapidae   Chats, Old World Flycatchers, and Allies        352 #>  5 Columbidae     Doves and Pigeons                               350 #>  6 Furnariidae    Ovenbirds and Woodcreepers                      321 #>  7 Accipitridae   Kites, Old World Vultures, Eagles, and Hawks    250 #>  8 Thamnophilidae Antbirds, Antshrikes, Antwrens, and Antvireos   239 #>  9 Picidae        Woodpeckers                                     237 #> 10 Fringillidae   Finches, Euphonias, and Allies                  236 #> 11 Strigidae      Owls                                            228 #> 12 Psittaculidae  Old World Parrots                               200 #> 13 Meliphagidae   Honeyeaters                                     195 #> 14 Turdidae       Thrushes and Allies                             194 #> 15 Phasianidae    Partridges, Pheasants, Grouse, and Allies       187 # Visualize family diversity ggplot(family_richness, aes(x = reorder(Family_English_name, n), y = n)) +   geom_col(fill = \"darkgreen\", alpha = 0.8) +   coord_flip() +   labs(     title = \"Most Species-Rich Bird Families\",     subtitle = \"Top 15 families by number of species\",     x = \"Family\",     y = \"Number of Species\",     caption = \"Data: AviList Global Avian Checklist v2025\"   ) +   theme_minimal() +   theme(axis.text.y = element_text(size = 10))"},{"path":[]},{"path":"https://dalyanalytics.github.io/avilistr/articles/getting-started.html","id":"finding-specific-groups","dir":"Articles","previous_headings":"Species Search and Filtering","what":"Finding Specific Groups","title":"Getting Started with avilistr","text":"","code":"# Get all thrush species thrushes <- avilist_2025_short %>%   filter(Family == \"Turdidae\", Taxon_rank == \"species\") %>%   select(Scientific_name, English_name_AviList)  cat(\"Number of thrush species:\", nrow(thrushes), \"\\n\") #> Number of thrush species: 194 head(thrushes) #> # A tibble: 6 × 2 #>   Scientific_name     English_name_AviList   #>   <chr>               <chr>                  #> 1 Grandala coelicolor Grandala               #> 2 Sialia sialis       Eastern Bluebird       #> 3 Sialia mexicana     Western Bluebird       #> 4 Sialia currucoides  Mountain Bluebird      #> 5 Pinarornis plumosus Boulder Chat           #> 6 Stizorhina finschi  Finsch's Rufous Thrush # Get all raptors (birds of prey) raptor_families <- c(\"Accipitridae\", \"Falconidae\", \"Strigidae\", \"Tytonidae\")  raptors <- avilist_2025_short %>%   filter(Family %in% raptor_families, Taxon_rank == \"species\") %>%   count(Family, Family_English_name, sort = TRUE)  print(raptors) #> # A tibble: 4 × 3 #>   Family       Family_English_name                              n #>   <chr>        <chr>                                        <int> #> 1 Accipitridae Kites, Old World Vultures, Eagles, and Hawks   250 #> 2 Strigidae    Owls                                           228 #> 3 Falconidae   Falcons and Caracaras                           65 #> 4 Tytonidae    Bay Owls and Barn Owls                          17"},{"path":"https://dalyanalytics.github.io/avilistr/articles/getting-started.html","id":"pattern-matching","dir":"Articles","previous_headings":"Species Search and Filtering","what":"Pattern Matching","title":"Getting Started with avilistr","text":"","code":"# Find species with \"Robin\" in their name robins <- avilist_2025_short %>%   filter(str_detect(English_name_AviList, \"Robin\"), Taxon_rank == \"species\") %>%   select(Scientific_name, English_name_AviList, Family) %>%   arrange(Family)  print(robins) #> # A tibble: 100 × 3 #>    Scientific_name         English_name_AviList      Family       #>    <chr>                   <chr>                     <chr>        #>  1 Tychaedon coryphoeus    Karoo Scrub Robin         Muscicapidae #>  2 Tychaedon leucosticta   Forest Scrub Robin        Muscicapidae #>  3 Tychaedon signata       Brown Scrub Robin         Muscicapidae #>  4 Tychaedon quadrivirgata Bearded Scrub Robin       Muscicapidae #>  5 Tychaedon barbata       Miombo Scrub Robin        Muscicapidae #>  6 Cercotrichas podobe     Black Scrub Robin         Muscicapidae #>  7 Cercotrichas galactotes Rufous-tailed Scrub Robin Muscicapidae #>  8 Cercotrichas paena      Kalahari Scrub Robin      Muscicapidae #>  9 Cercotrichas hartlaubi  Brown-backed Scrub Robin  Muscicapidae #> 10 Cercotrichas leucophrys White-browed Scrub Robin  Muscicapidae #> # ℹ 90 more rows # Explore a specific genus (Turdus) turdus_species <- avilist_2025_short %>%   filter(str_detect(Scientific_name, \"^Turdus \"), Taxon_rank == \"species\") %>%   select(Scientific_name, English_name_AviList) %>%   arrange(Scientific_name)  cat(\"Number of Turdus species:\", nrow(turdus_species), \"\\n\") #> Number of Turdus species: 105 head(turdus_species, 10) #> # A tibble: 10 × 2 #>    Scientific_name       English_name_AviList      #>    <chr>                 <chr>                     #>  1 Turdus abyssinicus    Abyssinian Thrush         #>  2 Turdus albicollis     White-necked Thrush       #>  3 Turdus albocinctus    White-collared Blackbird  #>  4 Turdus amaurochalinus Creamy-bellied Thrush     #>  5 Turdus ardosiaceus    Eastern Red-legged Thrush #>  6 Turdus arthuri        Campina Thrush            #>  7 Turdus assimilis      White-throated Thrush     #>  8 Turdus atrogularis    Black-throated Thrush     #>  9 Turdus aurantius      White-chinned Thrush      #> 10 Turdus bewsheri       Comoro Thrush"},{"path":[]},{"path":"https://dalyanalytics.github.io/avilistr/articles/getting-started.html","id":"checking-data-completeness","dir":"Articles","previous_headings":"Data Quality and Validation","what":"Checking Data Completeness","title":"Getting Started with avilistr","text":"","code":"# Summary of data completeness data_completeness <- avilist_2025 %>%   summarise(     total_records = n(),     missing_scientific_names = sum(is.na(Scientific_name)),     missing_families = sum(is.na(Family)),     missing_orders = sum(is.na(Order)),     missing_avilist_names = sum(is.na(English_name_AviList))   )  print(data_completeness) #> # A tibble: 1 × 5 #>   total_records missing_scientific_names missing_families missing_orders #>           <int>                    <int>            <int>          <int> #> 1         33684                        0               46              0 #> # ℹ 1 more variable: missing_avilist_names <int>"},{"path":"https://dalyanalytics.github.io/avilistr/articles/getting-started.html","id":"comparing-name-sources","dir":"Articles","previous_headings":"Data Quality and Validation","what":"Comparing Name Sources","title":"Getting Started with avilistr","text":"","code":"# Compare AviList vs Clements naming name_comparison <- avilist_2025 %>%   filter(Taxon_rank == \"species\") %>%   summarise(     total_species = n(),     has_avilist_name = sum(!is.na(English_name_AviList)),     has_clements_name = sum(!is.na(English_name_Clements_v2024)),     has_both_names = sum(!is.na(English_name_AviList) & !is.na(English_name_Clements_v2024)),     names_differ = sum(English_name_AviList != English_name_Clements_v2024, na.rm = TRUE)   )  print(name_comparison) #> # A tibble: 1 × 5 #>   total_species has_avilist_name has_clements_name has_both_names names_differ #>           <int>            <int>             <int>          <int>        <int> #> 1         11131            11131             11026          11026         1906 # Examples where names differ between sources name_differences <- avilist_2025 %>%   filter(     Taxon_rank == \"species\",     !is.na(English_name_AviList),     !is.na(English_name_Clements_v2024),     English_name_AviList != English_name_Clements_v2024   ) %>%   select(Scientific_name, English_name_AviList, English_name_Clements_v2024) %>%   head(10)  print(name_differences) #> # A tibble: 10 × 3 #>    Scientific_name        English_name_AviList         English_name_Clements_v…¹ #>    <chr>                  <chr>                        <chr>                     #>  1 Apteryx rowi           Okarito Kiwi                 Okarito Brown Kiwi        #>  2 Eudromia formosa       Quebracho Crested Tinamou    Quebracho Crested-Tinamou #>  3 Eudromia elegans       Elegant Crested Tinamou      Elegant Crested-Tinamou   #>  4 Tinamus tao            Grey Tinamou                 Gray Tinamou              #>  5 Crypturellus duidae    Grey-legged Tinamou          Gray-legged Tinamou       #>  6 Dendrocygna guttata    Spotted Whistling Duck       Spotted Whistling-Duck    #>  7 Dendrocygna eytoni     Plumed Whistling Duck        Plumed Whistling-Duck     #>  8 Dendrocygna viduata    White-faced Whistling Duck   White-faced Whistling-Du… #>  9 Dendrocygna autumnalis Black-bellied Whistling Duck Black-bellied Whistling-… #> 10 Dendrocygna arborea    West Indian Whistling Duck   West Indian Whistling-Du… #> # ℹ abbreviated name: ¹​English_name_Clements_v2024"},{"path":[]},{"path":"https://dalyanalytics.github.io/avilistr/articles/getting-started.html","id":"memory-and-speed-considerations","dir":"Articles","previous_headings":"Working with Performance","what":"Memory and Speed Considerations","title":"Getting Started with avilistr","text":"","code":"# For large analyses, use the short dataset when possible system.time({   short_analysis <- avilist_2025_short %>%     filter(Taxon_rank == \"species\") %>%     count(Order) }) #>    user  system elapsed  #>   0.007   0.000   0.008  # Filter early to reduce data size songbirds <- avilist_2025_short %>%   filter(Order == \"Passeriformes\", Taxon_rank == \"species\")  cat(\"Songbird species:\", nrow(songbirds), \"\\n\") #> Songbird species: 6705  # Select only needed columns to reduce memory usage essential_fields <- avilist_2025 %>%   select(Scientific_name, English_name_AviList, Family, Order, Taxon_rank)  cat(\"Memory usage reduced from\", ncol(avilist_2025), \"to\", ncol(essential_fields), \"columns\\n\") #> Memory usage reduced from 26 to 5 columns"},{"path":[]},{"path":"https://dalyanalytics.github.io/avilistr/articles/getting-started.html","id":"using-with-taxize","dir":"Articles","previous_headings":"Integration with Other R Packages","what":"Using with taxize","title":"Getting Started with avilistr","text":"","code":"library(taxize)  # Get a sample of species for validation sample_species <- avilist_2025_short %>%   filter(Family == \"Turdidae\", Taxon_rank == \"species\") %>%   pull(Scientific_name) %>%   head(5)  # Validate names with GBIF (commented out to avoid API calls in vignette) # gbif_validation <- get_gbifid(sample_species)"},{"path":"https://dalyanalytics.github.io/avilistr/articles/getting-started.html","id":"using-with-rebird-for-ebird-integration","dir":"Articles","previous_headings":"Integration with Other R Packages","what":"Using with rebird for eBird Integration","title":"Getting Started with avilistr","text":"","code":"library(rebird)  # Get Cornell Lab species codes from full dataset thrush_codes <- avilist_2025 %>%   filter(Family == \"Turdidae\", Taxon_rank == \"species\") %>%   select(Scientific_name, Species_code_Cornell_Lab) %>%   filter(!is.na(Species_code_Cornell_Lab))  # Example: Get recent observations (commented out to avoid API calls) # recent_thrushes <- ebirdregion(\"US-NY\", species = thrush_codes$Species_code_Cornell_Lab[1])"},{"path":[]},{"path":"https://dalyanalytics.github.io/avilistr/articles/getting-started.html","id":"taxonomic-patterns","dir":"Articles","previous_headings":"Advanced Analyses","what":"Taxonomic Patterns","title":"Getting Started with avilistr","text":"","code":"# Find monotypic genera (genera with only one species) monotypic_genera <- avilist_2025_short %>%   filter(Taxon_rank == \"species\") %>%   mutate(genus = str_extract(Scientific_name, \"^[A-Z][a-z]+\")) %>%   count(genus, Family) %>%   filter(n == 1) %>%   arrange(Family)  cat(\"Number of monotypic genera:\", nrow(monotypic_genera), \"\\n\") #> Number of monotypic genera: 890  # Genera per family monotypic_summary <- monotypic_genera %>%   count(Family, name = \"monotypic_genera\") %>%   arrange(desc(monotypic_genera)) %>%   head(10)  print(monotypic_summary) #> # A tibble: 10 × 2 #>    Family         monotypic_genera #>    <chr>                     <int> #>  1 Thraupidae                   48 #>  2 Trochilidae                  40 #>  3 Accipitridae                 37 #>  4 Tyrannidae                   35 #>  5 Anatidae                     32 #>  6 Furnariidae                  28 #>  7 Thamnophilidae               26 #>  8 Fringillidae                 21 #>  9 Meliphagidae                 20 #> 10 Sturnidae                    20"},{"path":"https://dalyanalytics.github.io/avilistr/articles/getting-started.html","id":"geographic-patterns-using-type-locality","dir":"Articles","previous_headings":"Advanced Analyses","what":"Geographic Patterns (using Type Locality)","title":"Getting Started with avilistr","text":"","code":"# Analyze type localities (where species were first described) type_localities <- avilist_2025 %>%   filter(Taxon_rank == \"species\", !is.na(Type_locality)) %>%   mutate(     continent = case_when(       str_detect(Type_locality, regex(\"Australia|New Zealand\", ignore_case = TRUE)) ~ \"Australasia\",       str_detect(Type_locality, regex(\"Europe|European\", ignore_case = TRUE)) ~ \"Europe\",       str_detect(Type_locality, regex(\"Africa|African\", ignore_case = TRUE)) ~ \"Africa\",       str_detect(Type_locality, regex(\"Asia|Asian|China|Japan|India\", ignore_case = TRUE)) ~ \"Asia\",       str_detect(Type_locality, regex(\"America|Brazil|Peru|Mexico|Canada|USA\", ignore_case = TRUE)) ~ \"Americas\",       TRUE ~ \"Other\"     )   ) %>%   count(continent, sort = TRUE)  print(type_localities) #> # A tibble: 6 × 2 #>   continent       n #>   <chr>       <int> #> 1 Other        8233 #> 2 Americas     1459 #> 3 Asia          411 #> 4 Australasia   263 #> 5 Africa        257 #> 6 Europe        145"},{"path":"https://dalyanalytics.github.io/avilistr/articles/getting-started.html","id":"exploring-field-metadata","dir":"Articles","previous_headings":"","what":"Exploring Field Metadata","title":"Getting Started with avilistr","text":"","code":"# Understand the available fields print(avilist_metadata) #> # A tibble: 26 × 6 #>    field_name      in_full_version in_short_version description data_type source #>    <chr>           <lgl>           <lgl>            <chr>       <chr>     <chr>  #>  1 Authority       TRUE            TRUE             Author and… character AviLi… #>  2 AvibaseID       TRUE            TRUE             Avibase da… character Aviba… #>  3 Bibliographic_… TRUE            TRUE             Bibliograp… character AviLi… #>  4 BirdLife_DataZ… TRUE            FALSE            BirdLife D… characte… BirdL… #>  5 Birds_of_the_W… TRUE            FALSE            Birds of t… characte… Corne… #>  6 Decision_summa… TRUE            TRUE             Data field… character AviLi… #>  7 English_name_A… TRUE            TRUE             English co… character AviLi… #>  8 English_name_B… TRUE            FALSE            Name field… character BirdL… #>  9 English_name_C… TRUE            FALSE            English co… character Cleme… #> 10 Extinct_or_pos… TRUE            TRUE             Data field… character AviLi… #> # ℹ 16 more rows  # Fields available in short vs full dataset cat(\"Fields in short dataset:\\n\") #> Fields in short dataset: short_fields <- avilist_metadata %>%   filter(in_short_version) %>%   pull(field_name) cat(paste(short_fields, collapse = \", \"), \"\\n\\n\") #> Authority, AvibaseID, Bibliographic_details, Decision_summary, English_name_AviList, Extinct_or_possibly_extinct, Family, Family_English_name, IUCN_Red_List_Category, Order, Range, Scientific_name, Sequence, Taxon_rank  cat(\"Additional fields in full dataset:\\n\") #> Additional fields in full dataset: full_only_fields <- avilist_metadata %>%   filter(in_full_version & !in_short_version) %>%   pull(field_name) cat(paste(full_only_fields, collapse = \", \"), \"\\n\") #> BirdLife_DataZone_URL, Birds_of_the_World_URL, English_name_BirdLife_v9, English_name_Clements_v2024, Gender_of_genus, Original_description_URL, Proposal_number, Protonym, Species_code_Cornell_Lab, Title_of_original_description, Type_locality, Type_species_of_genus"},{"path":"https://dalyanalytics.github.io/avilistr/articles/getting-started.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"Getting Started with avilistr","text":"avilistr package provides comprehensive access unified AviList Global Avian Checklist. Key takeaways: Use short dataset analyses improve performance Filter early analysis pipeline reduce memory usage Leverage metadata understand field contents sources Integrate packages like taxize rebird enhanced functionality Take advantage unified taxonomy avoid conflicts different checklist authorities advanced functionality, future versions package may include dedicated search validation functions.","code":""},{"path":"https://dalyanalytics.github.io/avilistr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jasmine Daly. Author, maintainer. AviList Core Team. Data contributor.           Data creators, see https://www.avilist.org//team-profiles/","code":""},{"path":"https://dalyanalytics.github.io/avilistr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Daly J (2025). avilistr: Access Work 'AviList' Global Avian Checklist. R package version 0.0.1, https://github.com/dalyanalytics/avilistr.","code":"@Manual{,   title = {avilistr: Access and Work with the 'AviList' Global Avian Checklist},   author = {Jasmine Daly},   year = {2025},   note = {R package version 0.0.1},   url = {https://github.com/dalyanalytics/avilistr}, }"},{"path":"https://dalyanalytics.github.io/avilistr/index.html","id":"avilistr-","dir":"","previous_headings":"","what":"Access and Work with the AviList Global Avian Checklis","title":"Access and Work with the AviList Global Avian Checklis","text":"Access AviList Global Avian Checklist R avilistr provides easy access AviList Global Avian Checklist, first unified global bird taxonomy harmonizes previous differences IOC, Clements, BirdLife checklists. package contains complete AviList dataset R data objects, ready analysis research.","code":""},{"path":"https://dalyanalytics.github.io/avilistr/index.html","id":"id_-about-avilist","dir":"","previous_headings":"","what":"🌍 About AviList","title":"Access and Work with the AviList Global Avian Checklis","text":"AviList represents landmark achievement ornithology - first unified global checklist Earth’s bird species. Released June 2025, contains: 11,131 species across 2,376 genera 19,879 subspecies 252 families 46 orders Unified taxonomy reconciling IOC, Clements, BirdLife differences Rich metadata including nomenclatural details external database links","code":""},{"path":"https://dalyanalytics.github.io/avilistr/index.html","id":"id_-installation","dir":"","previous_headings":"","what":"🦅 Installation","title":"Access and Work with the AviList Global Avian Checklis","text":"Install CRAN: install development version GitHub:","code":"install.packages(\"avilistr\") # Install from GitHub devtools::install_github(\"dalyanalytics/avilistr\")  # Or using pak pak::pak(\"dalyanalytics/avilistr\")"},{"path":"https://dalyanalytics.github.io/avilistr/index.html","id":"id_-quick-start","dir":"","previous_headings":"","what":"🦆 Quick Start","title":"Access and Work with the AviList Global Avian Checklis","text":"📖 detailed examples tutorials, see Getting Started vignette.","code":"library(avilistr)  # Load the complete AviList dataset data(avilist_2025)  # Or load the short version with essential fields only data(avilist_2025_short)  # Get basic information about the data nrow(avilist_2025)  # Total records sum(avilist_2025$Taxon_rank == \"species\")  # Number of species"},{"path":"https://dalyanalytics.github.io/avilistr/index.html","id":"id_-data-overview","dir":"","previous_headings":"","what":"🦜 Data Overview","title":"Access and Work with the AviList Global Avian Checklis","text":"package provides three main datasets:","code":""},{"path":[]},{"path":"https://dalyanalytics.github.io/avilistr/index.html","id":"key-fields","dir":"","previous_headings":"🦜 Data Overview","what":"Key Fields","title":"Access and Work with the AviList Global Avian Checklis","text":"Scientific_name: Binomial scientific name English_name_AviList: Official AviList common name English_name_Clements_v2024: Clements common name Order, Family: Taxonomic classification Authority: Original description author year Taxon_rank: Species, subspecies, etc. AvibaseID: Link Avibase database Plus 19 additional fields full version","code":""},{"path":[]},{"path":"https://dalyanalytics.github.io/avilistr/index.html","id":"id_-research-applications","dir":"","previous_headings":"🎯 Use Cases","what":"🔬 Research Applications","title":"Access and Work with the AviList Global Avian Checklis","text":"Taxonomic studies: Unified species concepts across databases Biodiversity analysis: Consistent species counts classifications Conservation planning: Link IUCN Red List via BirdLife integration Phylogenetic studies: Standardized taxonomic framework","code":""},{"path":"https://dalyanalytics.github.io/avilistr/index.html","id":"id_-birding--citizen-science","dir":"","previous_headings":"🎯 Use Cases","what":"🐦 Birding & Citizen Science","title":"Access and Work with the AviList Global Avian Checklis","text":"List standardization: Convert different checklist authorities Species validation: Check spelling current accepted names Range verification: Cross-reference multiple databases Trip planning: Filter geographic regions","code":""},{"path":"https://dalyanalytics.github.io/avilistr/index.html","id":"id_-data-management","dir":"","previous_headings":"🎯 Use Cases","what":"📊 Data Management","title":"Access and Work with the AviList Global Avian Checklis","text":"Database cleaning: Standardize heterogeneous species lists API integration: Connect eBird, BirdLife, services Reporting: Generate taxonomically consistent summaries Quality control: Validate species names datasets","code":""},{"path":"https://dalyanalytics.github.io/avilistr/index.html","id":"id_️-citation","dir":"","previous_headings":"","what":"🕊️ Citation","title":"Access and Work with the AviList Global Avian Checklis","text":"use avilistr research, please cite package underlying AviList data: Package Citation: AviList Citation:","code":"citation(\"avilistr\") AviList Core Team. 2025. AviList: The Global Avian Checklist, v2025. https://doi.org/10.2173/avilist.v2025"},{"path":"https://dalyanalytics.github.io/avilistr/index.html","id":"id_-future-development","dir":"","previous_headings":"","what":"🦅 Future Development","title":"Access and Work with the AviList Global Avian Checklis","text":"package currently provides core AviList datasets. Future versions may include: Search filtering functions easier data exploration Taxonomic reconciliation tools converting different checklist authorities Integration helpers connecting ornithological databases Validation functions species name checking Data update utilities annual AviList releases","code":""},{"path":"https://dalyanalytics.github.io/avilistr/index.html","id":"id_-license","dir":"","previous_headings":"","what":"📄 License","title":"Access and Work with the AviList Global Avian Checklis","text":"package licensed CC0 License (public domain). AviList data licensed CC 4.0.","code":""},{"path":"https://dalyanalytics.github.io/avilistr/index.html","id":"id_-acknowledgments","dir":"","previous_headings":"","what":"🙏 Acknowledgments","title":"Access and Work with the AviList Global Avian Checklis","text":"AviList Core Team creating unified global bird checklist International Ornithologists’ Union coordinating Working Group Avian Checklists BirdLife International, Cornell Lab Ornithology, partners R community excellent tools inspiration","code":""},{"path":"https://dalyanalytics.github.io/avilistr/index.html","id":"id_-getting-help","dir":"","previous_headings":"","what":"📞 Getting Help","title":"Access and Work with the AviList Global Avian Checklis","text":"🐛 Bug reports: GitHub Issues 💡 Feature requests: GitHub Discussions 📚 Documentation: Package website Built ❤️ global ornithology community","code":""},{"path":"https://dalyanalytics.github.io/avilistr/reference/avilist_2025.html","id":null,"dir":"Reference","previous_headings":"","what":"AviList Global Avian Checklist v2025 (Full Version) — avilist_2025","title":"AviList Global Avian Checklist v2025 (Full Version) — avilist_2025","text":"complete AviList dataset containing bird species, subspecies, taxonomic information June 2025. extended version available fields including nomenclatural details, bibliographic information, external database links.","code":""},{"path":"https://dalyanalytics.github.io/avilistr/reference/avilist_2025.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AviList Global Avian Checklist v2025 (Full Version) — avilist_2025","text":"","code":"avilist_2025"},{"path":"https://dalyanalytics.github.io/avilistr/reference/avilist_2025.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"AviList Global Avian Checklist v2025 (Full Version) — avilist_2025","text":"data frame 33684 rows 26 columns. See avilist_metadata detailed field descriptions.","code":""},{"path":"https://dalyanalytics.github.io/avilistr/reference/avilist_2025.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"AviList Global Avian Checklist v2025 (Full Version) — avilist_2025","text":"AviList Core Team. 2025. AviList: Global Avian Checklist, v2025. doi:10.2173/avilist.v2025","code":""},{"path":"https://dalyanalytics.github.io/avilistr/reference/avilist_2025.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"AviList Global Avian Checklist v2025 (Full Version) — avilist_2025","text":"","code":"# Load the full dataset data(avilist_2025)  # View summary str(avilist_2025) #> tibble [33,684 × 26] (S3: tbl_df/tbl/data.frame) #>  $ Sequence                     : num [1:33684] 1 2 3 4 5 6 7 8 9 10 ... #>  $ Taxon_rank                   : chr [1:33684] \"order\" \"family\" \"genus\" \"species\" ... #>  $ Order                        : chr [1:33684] \"Struthioniformes\" \"Struthioniformes\" \"Struthioniformes\" \"Struthioniformes\" ... #>  $ Family                       : chr [1:33684] NA \"Struthionidae\" \"Struthionidae\" \"Struthionidae\" ... #>  $ Family_English_name          : chr [1:33684] NA \"Ostriches\" \"Ostriches\" \"Ostriches\" ... #>  $ Scientific_name              : chr [1:33684] \"Struthioniformes\" \"Struthionidae\" \"Struthio\" \"Struthio molybdophanes\" ... #>  $ Authority                    : chr [1:33684] NA NA \"Linnaeus, C, 1758\" \"Reichenow, A, 1883\" ... #>  $ Bibliographic_details        : chr [1:33684] NA NA \"Systema Naturæ per Regna Tria Naturæ, Secundum Classes, Ordines, Genera, Species, cum Characteribus, Differenti\"| __truncated__ \"Mittheilungen des Ornithologischen Vereines in Wien p.202\" ... #>  $ English_name_AviList         : chr [1:33684] NA NA NA \"Somali Ostrich\" ... #>  $ English_name_Clements_v2024  : chr [1:33684] NA NA NA \"Somali Ostrich\" ... #>  $ English_name_BirdLife_v9     : chr [1:33684] NA NA NA \"Somali Ostrich\" ... #>  $ Proposal_number              : chr [1:33684] NA NA NA NA ... #>  $ Decision_summary             : chr [1:33684] NA NA NA NA ... #>  $ Range                        : chr [1:33684] NA NA NA \"desert to savanna plains of northeastern Africa, from northern Ethiopia, Djibouti, and Somalia southward throug\"| __truncated__ ... #>  $ Extinct_or_possibly_extinct  : chr [1:33684] NA NA NA NA ... #>  $ IUCN_Red_List_Category       : chr [1:33684] NA NA NA \"VU\" ... #>  $ BirdLife_DataZone_URL        : chr [1:33684] NA NA NA \"https://datazone.birdlife.org/species/factsheet/22732795\" ... #>  $ Species_code_Cornell_Lab     : chr [1:33684] NA NA NA \"ostric3\" ... #>  $ Birds_of_the_World_URL       : chr [1:33684] NA NA NA \"https://birdsoftheworld.org/bow/species/ostric3/\" ... #>  $ AvibaseID                    : chr [1:33684] NA NA NA \"avibase-40329BB6\" ... #>  $ Gender_of_genus              : chr [1:33684] NA NA \"M\" NA ... #>  $ Type_species_of_genus        : chr [1:33684] NA NA \"Struthio camelus [Linnaeus, 1758]; type by subsequent designation (Gray, GR, 1840, A List of the Genera of Birds, p. 63).\" NA ... #>  $ Type_locality                : chr [1:33684] NA NA NA \"Somaliland.\" ... #>  $ Title_of_original_description: chr [1:33684] NA NA NA NA ... #>  $ Original_description_URL     : chr [1:33684] NA NA \"https://www.biodiversitylibrary.org/item/10277#page/174/mode/1up\" NA ... #>  $ Protonym                     : chr [1:33684] NA NA \"Struthio\" \"Struthio molybdophanes\" ..."},{"path":"https://dalyanalytics.github.io/avilistr/reference/avilist_2025_short.html","id":null,"dir":"Reference","previous_headings":"","what":"AviList Global Avian Checklist v2025 (Short Version) — avilist_2025_short","title":"AviList Global Avian Checklist v2025 (Short Version) — avilist_2025_short","text":"essential fields AviList dataset containing core taxonomic information bird species subspecies June 2025. official short version provided AviList team, optimized faster loading basic taxonomic operations.","code":""},{"path":"https://dalyanalytics.github.io/avilistr/reference/avilist_2025_short.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AviList Global Avian Checklist v2025 (Short Version) — avilist_2025_short","text":"","code":"avilist_2025_short"},{"path":"https://dalyanalytics.github.io/avilistr/reference/avilist_2025_short.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"AviList Global Avian Checklist v2025 (Short Version) — avilist_2025_short","text":"data frame 33684 rows 14 columns. See avilist_metadata detailed field descriptions.","code":""},{"path":"https://dalyanalytics.github.io/avilistr/reference/avilist_2025_short.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"AviList Global Avian Checklist v2025 (Short Version) — avilist_2025_short","text":"AviList Core Team. 2025. AviList: Global Avian Checklist, v2025. doi:10.2173/avilist.v2025","code":""},{"path":"https://dalyanalytics.github.io/avilistr/reference/avilist_2025_short.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"AviList Global Avian Checklist v2025 (Short Version) — avilist_2025_short","text":"","code":"# Load the short dataset (faster loading) data(avilist_2025_short)  # View summary str(avilist_2025_short) #> tibble [33,684 × 14] (S3: tbl_df/tbl/data.frame) #>  $ Sequence                   : num [1:33684] 1 2 3 4 5 6 7 8 9 10 ... #>  $ Taxon_rank                 : chr [1:33684] \"order\" \"family\" \"genus\" \"species\" ... #>  $ Order                      : chr [1:33684] \"Struthioniformes\" \"Struthioniformes\" \"Struthioniformes\" \"Struthioniformes\" ... #>  $ Family                     : chr [1:33684] NA \"Struthionidae\" \"Struthionidae\" \"Struthionidae\" ... #>  $ Family_English_name        : chr [1:33684] NA \"Ostriches\" \"Ostriches\" \"Ostriches\" ... #>  $ Scientific_name            : chr [1:33684] \"Struthioniformes\" \"Struthionidae\" \"Struthio\" \"Struthio molybdophanes\" ... #>  $ Authority                  : chr [1:33684] NA NA \"Linnaeus, C, 1758\" \"Reichenow, A, 1883\" ... #>  $ Bibliographic_details      : chr [1:33684] NA NA \"Systema Naturæ per Regna Tria Naturæ, Secundum Classes, Ordines, Genera, Species, cum Characteribus, Differenti\"| __truncated__ \"Mittheilungen des Ornithologischen Vereines in Wien p.202\" ... #>  $ English_name_AviList       : chr [1:33684] NA NA NA \"Somali Ostrich\" ... #>  $ Decision_summary           : chr [1:33684] NA NA NA NA ... #>  $ Range                      : chr [1:33684] NA NA NA \"desert to savanna plains of northeastern Africa, from northern Ethiopia, Djibouti, and Somalia southward throug\"| __truncated__ ... #>  $ Extinct_or_possibly_extinct: chr [1:33684] NA NA NA NA ... #>  $ IUCN_Red_List_Category     : chr [1:33684] NA NA NA \"VU\" ... #>  $ AvibaseID                  : chr [1:33684] NA NA NA \"avibase-40329BB6\" ..."},{"path":"https://dalyanalytics.github.io/avilistr/reference/avilist_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"AviList Field Metadata — avilist_metadata","title":"AviList Field Metadata — avilist_metadata","text":"Metadata describing fields AviList datasets, including field descriptions, data types, sources, availability different dataset versions.","code":""},{"path":"https://dalyanalytics.github.io/avilistr/reference/avilist_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AviList Field Metadata — avilist_metadata","text":"","code":"avilist_metadata"},{"path":"https://dalyanalytics.github.io/avilistr/reference/avilist_metadata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"AviList Field Metadata — avilist_metadata","text":"tibble metadata AviList fields: field_name Name field dataset description Human-readable description field content data_type Data type (character, numeric, etc.) source Original source data (AviList, Clements, etc.) in_full_version Logical, whether field full dataset in_short_version Logical, whether field short dataset","code":""},{"path":"https://dalyanalytics.github.io/avilistr/reference/avilist_metadata.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"AviList Field Metadata — avilist_metadata","text":"Generated AviList field analysis","code":""},{"path":"https://dalyanalytics.github.io/avilistr/reference/avilist_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"AviList Field Metadata — avilist_metadata","text":"","code":"# View all field descriptions data(avilist_metadata)  # Fields in short version only avilist_metadata[avilist_metadata$in_short_version, ] #> # A tibble: 14 × 6 #>    field_name      in_full_version in_short_version description data_type source #>    <chr>           <lgl>           <lgl>            <chr>       <chr>     <chr>  #>  1 Authority       TRUE            TRUE             Author and… character AviLi… #>  2 AvibaseID       TRUE            TRUE             Avibase da… character Aviba… #>  3 Bibliographic_… TRUE            TRUE             Bibliograp… character AviLi… #>  4 Decision_summa… TRUE            TRUE             Data field… character AviLi… #>  5 English_name_A… TRUE            TRUE             English co… character AviLi… #>  6 Extinct_or_pos… TRUE            TRUE             Data field… character AviLi… #>  7 Family          TRUE            TRUE             Taxonomic … character AviLi… #>  8 Family_English… TRUE            TRUE             English na… character AviLi… #>  9 IUCN_Red_List_… TRUE            TRUE             Data field… character AviLi… #> 10 Order           TRUE            TRUE             Taxonomic … character AviLi… #> 11 Range           TRUE            TRUE             Data field… character AviLi… #> 12 Scientific_name TRUE            TRUE             Scientific… character AviLi… #> 13 Sequence        TRUE            TRUE             Sequential… numeric   AviLi… #> 14 Taxon_rank      TRUE            TRUE             Taxonomic … character AviLi…  # Fields from specific sources avilist_metadata[avilist_metadata$source == \"Clements\", ] #> # A tibble: 1 × 6 #>   field_name       in_full_version in_short_version description data_type source #>   <chr>            <lgl>           <lgl>            <chr>       <chr>     <chr>  #> 1 English_name_Cl… TRUE            FALSE            English co… character Cleme…"},{"path":"https://dalyanalytics.github.io/avilistr/news/index.html","id":"avilistr-001-development-version","dir":"Changelog","previous_headings":"","what":"avilistr 0.0.1 (development version)","title":"avilistr 0.0.1 (development version)","text":"CRAN release: 2025-06-17 2025-06-13: Initial CRAN submission","code":""}]
